// <auto-generated />
using System;
using Immf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace immfApi.Migrations
{
    [DbContext(typeof(IMissMyFriendsDb))]
    [Migration("20250614145140_RemoveHangOutsOnLovedOne")]
    partial class RemoveHangOutsOnLovedOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Immf.Models.Hangout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("LovedOneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LovedOneId");

                    b.ToTable("Hangouts");
                });

            modelBuilder.Entity("Immf.Models.LovedOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Relationship")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LovedOnes");
                });

            modelBuilder.Entity("Immf.Models.Hangout", b =>
                {
                    b.HasOne("Immf.Models.LovedOne", "LovedOne")
                        .WithMany()
                        .HasForeignKey("LovedOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LovedOne");
                });
#pragma warning restore 612, 618
        }
    }
}
